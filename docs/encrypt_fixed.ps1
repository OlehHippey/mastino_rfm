# encrypt.ps1 ‚Äî PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–æ—à–∏–≤–∫–∏ ESP32 + –≤–µ—Ä—Å—ñ—è –∑ CMakeLists.txt

# –®–ª—è—Ö–∏ –¥–æ —Ñ–∞–π–ª—ñ–≤
$Tool = "components\espressif__esp_encrypted_img\tools\esp_enc_img_gen.py"
$Input = "build\mastino_hub.bin"
$Output = "build\mastino_hub.enc.bin"
$Key = "key_tsall.pem"

# –í–∏–∫–ª–∏–∫ Python-—Å–∫—Ä–∏–ø—Ç–∞
python $Tool encrypt $Input $Key $Output

# –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—ó –∑ CMakeLists.txt
$CMakeText = Get-Content CMakeLists.txt
foreach ($line in $CMakeText) {
    if ($line -match 'set\s*\(\s*PROJECT_VER\s+"([^"]+)"\s*\)') {
        $ver = $matches[1]
        break
    }
}

if (-not $ver) {
    Write-Host "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ PROJECT_VER —É CMakeLists.txt"
    exit 1
}

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—É last
$LastPath = "build\last"
Set-Content -Encoding ASCII -Path $LastPath -Value $ver
Write-Host "`n‚úÖ DONE! OTA version file generated: $ver"

# –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–∞–π–ª OTA (firmware) –Ω–∞ —Å–µ—Ä–≤–µ—Ä
Write-Host "`nüì§ Uploading encrypted firmware..."
Invoke-RestMethod -Uri "http://localhost:8080/upload" -Method Post -InFile "build\mastino_hub.enc.bin" -ContentType "multipart/form-data" -Form @{ file = Get-Item "build\mastino_hub.enc.bin" }

# –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–∞–π–ª –≤–µ—Ä—Å—ñ—ó
Invoke-RestMethod -Uri "http://localhost:8080/upload" -Method Post -InFile "build\last" -ContentType "multipart/form-data" -Form @{ file = Get-Item "build\last" }

Write-Host "Upload complete."

